// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VARkit
import ARKit
import AVFoundation
import AVKit
import Foundation
import SceneKit
import Swift
import SwiftPhotoGallery
import UIKit
import Zip
public enum VARError : Swift.Error {
  case alreadySynching
  case networkError(error: Swift.Error)
  case serverError
  case parsingError(error: Swift.Error)
  case fileError(error: Swift.Error)
  case alreadyUpToDate
}
public enum VARStatus {
  case updateStarted(firstTime: Swift.Bool)
  case downloadStarted
  case downloadProgress(percentage: Swift.Float)
  case downloadCompleted
  case updateCompleted
  case updateFailed(error: VARkit.VARError)
  case alreadyUpToDate
}
public protocol VARStatusDelegate : AnyObject {
  func statusDidChange(status: VARkit.VARStatus)
}
@objc @_inheritsConvenienceInitializers open class VARViewController : UIKit.UIViewController, ARKit.ARSCNViewDelegate, VARkit.VARStatusDelegate, SwiftPhotoGallery.SwiftPhotoGalleryDataSource, SwiftPhotoGallery.SwiftPhotoGalleryDelegate {
  open var appKey: Swift.String!
  @objc override dynamic open func viewDidLoad()
  @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @objc override dynamic open func viewWillDisappear(_ animated: Swift.Bool)
  @objc override dynamic open var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @objc override dynamic open var prefersStatusBarHidden: Swift.Bool {
    @objc get
  }
  @objc override dynamic open var prefersHomeIndicatorAutoHidden: Swift.Bool {
    @objc get
  }
  open func refresh()
  open func cancelSync()
  open func statusDidChange(status: VARkit.VARStatus)
  @objc override dynamic open func touchesEnded(_ touches: Swift.Set<UIKit.UITouch>, with event: UIKit.UIEvent?)
  @objc public func numberOfImagesInGallery(gallery: SwiftPhotoGallery.SwiftPhotoGallery) -> Swift.Int
  @objc public func imageInGallery(gallery: SwiftPhotoGallery.SwiftPhotoGallery, forIndex: Swift.Int) -> UIKit.UIImage?
  @objc public func galleryDidTapToClose(gallery: SwiftPhotoGallery.SwiftPhotoGallery)
  @objc public func renderer(_ renderer: SceneKit.SCNSceneRenderer, didRemove node: SceneKit.SCNNode, for anchor: ARKit.ARAnchor)
  @objc public func renderer(_ renderer: SceneKit.SCNSceneRenderer, didUpdate node: SceneKit.SCNNode, for anchor: ARKit.ARAnchor)
  @objc public func renderer(_ renderer: SceneKit.SCNSceneRenderer, didAdd node: SceneKit.SCNNode, for anchor: ARKit.ARAnchor)
  @objc deinit
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension VARViewController : ARKit.ARSessionDelegate {
  @objc dynamic public func session(_ session: ARKit.ARSession, cameraDidChangeTrackingState camera: ARKit.ARCamera)
  @objc dynamic public func session(_ session: ARKit.ARSession, didFailWithError error: Swift.Error)
  @objc dynamic public func sessionWasInterrupted(_ session: ARKit.ARSession)
  @objc dynamic public func sessionInterruptionEnded(_ session: ARKit.ARSession)
  @objc dynamic public func sessionShouldAttemptRelocalization(_ session: ARKit.ARSession) -> Swift.Bool
}
